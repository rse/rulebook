##
##  Rundown - Render Rundown Scripts for Teleprompting
##  Copyright (c) 2023-2025 Dr. Ralf S. Engelschall <rse@engelschall.com>
##  Licensed under GPL 3.0 <https://spdx.org/licenses/GPL-3.0-only>
##

#   (internal): just pass-through "npm install" operation
post-install
    npm --prefix rulebook-2-app install && \
    npm --prefix rulebook-3-cli install && \
    npm --prefix rulebook-4-dst install

#   automatically update all NPM dependencies
upd
    npx -y upd && \
    (cd rulebook-2-app && npx -y upd) && \
    (cd rulebook-3-cli && npx -y upd) && \
    (cd rulebook-4-dst && npx -y upd)

#   build components for production (full build)
build
    npm --prefix rulebook-2-app start build && \
    npm --prefix rulebook-3-cli start build && \
    npm --prefix rulebook-4-dst start build

#   (internal): build components for development (partial build only)
build:dev
    npm --prefix rulebook-2-app start build && \
    npm --prefix rulebook-3-cli start build

#   (internal): build components for development (continuous file watching)
build:dev:watch
    watch "npm start build:dev" \
        rulebook-2-web/src \
        rulebook-3-cli/src \
        --wait=2 --interval=1

#   (internal): run command-line interface for production
run:dev:watch
    wait-on -l "rulebook-3-cli/dst-stage2/rulebook.js" && \
    cross-env NODE_OPTIONS="--no-warnings" \
        nodemon --signal SIGINT -w rulebook-3-cli/dst-stage2 --delay 1500ms \
            rulebook-3-cli/dst-stage2/rulebook.js -- \
            $RULEBOOK_OPTIONS

#   (internal): run command-line interface for development (continuous file watching)
run:dev
    concurrently -p "[{name}]" -n "build,run" -c "blue,red" \
        "npm start build:dev:watch" \
        "npm start run:dev:watch"

#   run command-line interface in batch conversion mode
rulebook-cmd
    node --no-warnings rulebook-3-cli/dst-stage2/rulebook.js \
        -o rulebook-5-smp/dst rulebook-5-smp/src

#   publish components
publish
    npm --prefix rulebook-4-dst start publish

#   remove all generated artifacts (reverse of "npm start build")
clean
    npm --prefix rulebook-2-app start clean && \
    npm --prefix rulebook-3-cli start clean && \
    npm --prefix rulebook-7-dst start clean

#   remove all generated artifacts (reverse of "npm install" and "npm start build")
clean:dist
    npm --prefix rulebook-2-app start clean:dist && \
    npm --prefix rulebook-3-cli start clean:dist && \
    npm --prefix rulebook-7-dst start clean:dist && \
    shx rm -f package-lock.json && \
    shx rm -rf node_modules

